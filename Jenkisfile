pipeline {
    agent any
    triggers {
        githubPush()
    }
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Clone repository') { 
            steps { 
                script {
                    sh "rm -rf glsibproject" // remove existing repository if any
                    sh "git clone https://github.com/attax4dev/glsibproject.git " // clone the repository and checkout the master branch
                }
            }
        }

        stage('Build') { 
            steps { 
                script {
                    // Build the code using Nexus as the dependency source
                    sh 'ls glsibproject/'
                    app = docker.build("glsibdockerhub/front-app","glsibproject/")
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run SonarQube analysis
                    withSonarQubeEnv('SonarQube') {
                     //     sh './node_modules/.bin/sonar-scanner'
                    sh '/home/ec2-user/node_modules/sonar-scanner/bin/sonar-scanner \
-Dsonar.projectKey=your-project-key \
-Dsonar.sources=glsibproject/client,glsibproject/server \
-Dsonar.host.url=http://52.200.49.109:9000 \
-Dsonar.login=admin \
-Dsonar.password=glsib'


                    }
                }
            }
        }

        stage('Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub')  {
                        app.push("${env.BUILD_NUMBER}")
                        app.push("latest")
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'aws eks update-kubeconfig --region us-east-1 --name eks-cluster'
                sh 'kubectl apply -f glsibproject/manifest-file.yml'
            }
        }
    }
}
